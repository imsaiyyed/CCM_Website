{"version":3,"sources":["app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["emails","useStyles","makeStyles","avatar","backgroundColor","blue","color","SimpleDialog","props","classes","onClose","selectedValue","other","Object","objectWithoutProperties","handleListItemClick","value","react_default","a","createElement","Dialog","assign","aria-labelledby","DialogTitle","id","List","map","email","ListItem","button","onClick","key","ListItemAvatar","Avatar","className","Person_default","ListItemText","primary","Add_default","SimpleDialogDemo","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","_React$useState3","_React$useState4","setSelectedValue","Typography","variant","Button","AlertDialog","handleClose","aria-describedby","DialogContent","DialogContentText","DialogActions","autoFocus","Transition","forwardRef","ref","Slide","direction","AlertDialogSlide","TransitionComponent","keepMounted","FormDialog","TextField","margin","label","type","fullWidth","withStyles","theme","root","padding","spacing","closeButton","position","right","top","palette","grey","children","disableTypography","IconButton","aria-label","Close_default","MuiDialogContent","MuiDialogActions","CustomizedDialogs","Component","[object Object]","args","super","this","state","handleClickOpen","setState","render","CustomizedDialog_DialogTitle","CustomizedDialog_DialogContent","dividers","gutterBottom","CustomizedDialog_DialogActions","appBar","title","marginLeft","flex","FullScreenDialog","fullScreen","AppBar","Toolbar","edge","secondary","Divider","form","display","flexDirection","width","formControl","marginTop","minWidth","formControlLabel","MaxWidthDialog","setFullWidth","_React$useState5","_React$useState6","maxWidth","setMaxWidth","Fragment","noValidate","FormControl","InputLabel","htmlFor","Select","onChange","event","target","inputProps","name","MenuItem","FormControlLabel","control","Switch","checked","ResponsiveDialog","useTheme","useMediaQuery","breakpoints","down","options","ConfirmationDialogRaw","valueProp","setValue","radioGroupRef","useRef","useEffect","disableBackdropClick","disableEscapeKeyDown","onEntering","current","focus","RadioGroup","newValue","option","Radio","background","paper","maxHeight","ConfirmationDialog","component","role","divider","disabled","aria-haspopup","aria-controls","AppDialog","matx","routeSegments","path","CustomizedDialog"],"mappings":"oSAgBMA,EAAS,CAAC,qBAAsB,oBAChCC,EAAYC,YAAW,CAC3BC,OAAQ,CACNC,gBAAiBC,IAAK,KACtBC,MAAOD,IAAK,QAIhB,SAASE,EAAaC,GACpB,IAAMC,EAAUR,IACRS,EAAqCF,EAArCE,QAASC,EAA4BH,EAA5BG,cAAkBC,EAFRC,OAAAC,EAAA,EAAAD,CAEkBL,EAFlB,6BAQ3B,SAASO,EAAoBC,GAC3BN,EAAQM,GAGV,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAADP,OAAAQ,OAAA,CACEX,QAVJ,WACEA,EAAQC,IAUNW,kBAAgB,uBACZV,GAEJK,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaC,GAAG,uBAAhB,sBACAP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACGzB,EAAO0B,IAAIC,GACVV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,IAAMf,EAAoBY,GACnCI,IAAKJ,GAELV,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQC,UAAWzB,EAAQN,QACzBc,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,QAGJD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAcC,QAASV,MAI3BV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,IAAMf,EAAoB,eAClDE,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,QAGJD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAcC,QAAQ,mBAajB,SAASE,IAAmB,IAAAC,EACjBC,IAAMC,UAAS,GADEC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,GAClCK,EADkCF,EAAA,GAC5BG,EAD4BH,EAAA,GAAAI,EAECN,IAAMC,SAAS1C,EAAO,IAFvBgD,EAAAnC,OAAA+B,EAAA,EAAA/B,CAAAkC,EAAA,GAElCpC,EAFkCqC,EAAA,GAEnBC,EAFmBD,EAAA,GAazC,OACE/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYC,QAAQ,aAApB,aAA2CxC,GAC3CM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQD,QAAQ,WAAW7C,MAAM,UAAUwB,QAb/C,WACEgB,GAAQ,KAYN,sBAGA7B,EAAAC,EAAAC,cAACZ,EAAD,CACEI,cAAeA,EACfkC,KAAMA,EACNnC,QAfcM,IAClB8B,GAAQ,GACRG,EAAiBjC,yCChFN,SAASqC,IAAc,IAAAb,EACZC,IAAMC,UAAS,GADHC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,GAC7BK,EAD6BF,EAAA,GACvBG,EADuBH,EAAA,GAOpC,SAASW,IACPR,GAAQ,GAGV,OACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQD,QAAQ,WAAW7C,MAAM,UAAUwB,QAV/C,WACEgB,GAAQ,KASN,qBAGA7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyB,KAAMA,EACNnC,QAAS4C,EACThC,kBAAgB,qBAChBiC,mBAAiB,4BAEjBtC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaC,GAAG,sBACb,kCAEHP,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAmBjC,GAAG,4BAAtB,kIAKFP,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QAASwB,EAAahD,MAAM,WAApC,YAGAW,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QAASwB,EAAahD,MAAM,UAAUqD,WAAS,GAAvD,0BClCJC,EAAanB,IAAMoB,WAAW,SAAoBrD,EAAOsD,GAC7D,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAA,EAADlD,OAAAQ,OAAA,CAAO2C,UAAU,KAAKF,IAAKA,GAAStD,MAG9B,SAASyD,IAAmB,IAAAzB,EACjBC,IAAMC,UAAS,GADEC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,GAClCK,EADkCF,EAAA,GAC5BG,EAD4BH,EAAA,GAOzC,SAASW,IACPR,GAAQ,GAGV,OACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQD,QAAQ,WAAW7C,MAAM,UAAUwB,QAV/C,WACEgB,GAAQ,KASN,yBAGA7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyB,KAAMA,EACNqB,oBAAqBN,EACrBO,aAAW,EACXzD,QAAS4C,EACThC,kBAAgB,2BAChBiC,mBAAiB,kCAEjBtC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaC,GAAG,4BACb,kCAEHP,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAmBjC,GAAG,kCAAtB,kIAKFP,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QAASwB,EAAahD,MAAM,WAApC,YAGAW,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QAASwB,EAAahD,MAAM,WAApC,yBCzCK,SAAS8D,IAAa,IAAA5B,EACXC,IAAMC,UAAS,GADJC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,GAC5BK,EAD4BF,EAAA,GACtBG,EADsBH,EAAA,GAOnC,SAASW,IACPR,GAAQ,GAGV,OACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQD,QAAQ,WAAW7C,MAAM,UAAUwB,QAV/C,WACEgB,GAAQ,KASN,oBAGA7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyB,KAAMA,EACNnC,QAAS4C,EACThC,kBAAgB,qBAEhBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaC,GAAG,qBAAhB,aACAP,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,+GAIAxC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CACEV,WAAS,EACTW,OAAO,QACP9C,GAAG,OACH+C,MAAM,gBACNC,KAAK,QACLC,WAAS,KAGbxD,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QAASwB,EAAahD,MAAM,WAApC,UAGAW,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QAASwB,EAAahD,MAAM,WAApC,yDCzBJiB,EAAcmD,YAbLC,IAAK,CAClBC,KAAM,CACJN,OAAQ,EACRO,QAASF,EAAMG,QAAQ,IAEzBC,YAAa,CACXC,SAAU,WACVC,MAAON,EAAMG,QAAQ,GACrBI,IAAKP,EAAMG,QAAQ,GACnBxE,MAAOqE,EAAMQ,QAAQC,KAAK,QAIVV,CAAmBlE,IAAS,IACtC6E,EAA+B7E,EAA/B6E,SAAU5E,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QAC3B,OACEO,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAgB+D,mBAAiB,EAACpD,UAAWzB,EAAQmE,MACnD3D,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYC,QAAQ,MAAMkC,GACzB3E,EACCO,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEC,aAAW,QACXtD,UAAWzB,EAAQsE,YACnBjD,QAASpB,GAETO,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,OAEA,QAKJsC,EAAgBkB,YAAWC,IAAK,CACpCC,KAAM,CACJC,QAASF,EAAMG,QAAQ,MAFLJ,CAIlBgB,KAEEhC,EAAgBgB,YAAWC,IAAK,CACpCC,KAAM,CACJN,OAAQ,EACRO,QAASF,EAAMG,QAAQ,MAHLJ,CAKlBiB,KA+DWC,MA7Df,cAAgCnD,IAAMoD,UAAUC,eAAAC,GAAAC,SAAAD,GAAAE,KAC9CC,MAAQ,CACNrD,MAAM,GAFsCoD,KAK9CE,gBAAkB,MAChBF,KAAKG,SAAS,CACZvD,MAAM,MAPoCoD,KAW9C3C,YAAc,MACZ2C,KAAKG,SAAS,CAAEvD,MAAM,MAGxBwD,SACE,OACEpF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACED,QAAQ,WACR7C,MAAM,YACNwB,QAASmE,KAAKE,iBAHhB,eAOAlF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,QAASuF,KAAK3C,YACdhC,kBAAgB,0BAChBuB,KAAMoD,KAAKC,MAAMrD,MAEjB5B,EAAAC,EAAAC,cAACmF,EAAD,CAAa9E,GAAG,0BAA0Bd,QAASuF,KAAK3C,aAAxD,eAGArC,EAAAC,EAAAC,cAACoF,EAAD,CAAeC,UAAQ,GACrBvF,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYuD,cAAY,GAAxB,gLAKAxF,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYuD,cAAY,GAAxB,8IAKAxF,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYuD,cAAY,GAAxB,+LAMFxF,EAAAC,EAAAC,cAACuF,EAAD,KACEzF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QAASmE,KAAK3C,YAAahD,MAAM,WAAzC,mDC3FNL,EAAYC,YAAWyE,IAAK,CAChCgC,OAAQ,CACN3B,SAAU,YAEZ4B,MAAO,CACLC,WAAYlC,EAAMG,QAAQ,GAC1BgC,KAAM,MAIJlD,EAAanB,IAAMoB,WAAW,SAAoBrD,EAAOsD,GAC7D,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAA,EAADlD,OAAAQ,OAAA,CAAO2C,UAAU,KAAKF,IAAKA,GAAStD,MAG9B,SAASuG,IACtB,IAAMtG,EAAUR,IADyBuC,EAEjBC,IAAMC,UAAS,GAFEC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,GAElCK,EAFkCF,EAAA,GAE5BG,EAF4BH,EAAA,GAQzC,SAASW,IACPR,GAAQ,GAGV,OACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQD,QAAQ,WAAW7C,MAAM,UAAUwB,QAV/C,WACEgB,GAAQ,KASN,2BAGA7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4F,YAAU,EACVnE,KAAMA,EACNnC,QAAS4C,EACTY,oBAAqBN,GAErB3C,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAQ/E,UAAWzB,EAAQkG,QACzB1F,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,KACEjG,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACE4B,KAAK,QACL7G,MAAM,UACNwB,QAASwB,EACTkC,aAAW,SAEXvE,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,OAEFD,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAYC,QAAQ,KAAKjB,UAAWzB,EAAQmG,OAA5C,SAGA3F,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQ9C,MAAM,UAAUwB,QAASwB,GAAjC,UAKJrC,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,QAAM,GACdZ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAcC,QAAQ,iBAAiB+E,UAAU,aAEnDnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,MACApG,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,QAAM,GACdZ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,QAAQ,gCACR+E,UAAU,iFC/DlBnH,GAAYC,YAAWyE,IAAK,CAChC2C,KAAM,CACJC,QAAS,OACTC,cAAe,SACflD,OAAQ,OACRmD,MAAO,eAETC,YAAa,CACXC,UAAWhD,EAAMG,QAAQ,GACzB8C,SAAU,KAEZC,iBAAkB,CAChBF,UAAWhD,EAAMG,QAAQ,OAId,SAASgD,KACtB,IAAMrH,EAAUR,KADuBuC,EAEfC,IAAMC,UAAS,GAFAC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,GAEhCK,EAFgCF,EAAA,GAE1BG,EAF0BH,EAAA,GAAAI,EAGLN,IAAMC,UAAS,GAHVM,EAAAnC,OAAA+B,EAAA,EAAA/B,CAAAkC,EAAA,GAGhC0B,EAHgCzB,EAAA,GAGrB+E,EAHqB/E,EAAA,GAAAgF,EAIPvF,IAAMC,SAAS,MAJRuF,EAAApH,OAAA+B,EAAA,EAAA/B,CAAAmH,EAAA,GAIhCE,EAJgCD,EAAA,GAItBE,EAJsBF,EAAA,GAUvC,SAAS3E,IACPR,GAAQ,GAWV,OACE7B,EAAAC,EAAAC,cAACF,EAAAC,EAAMkH,SAAP,KACEnH,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQD,QAAQ,WAAW7C,MAAM,UAAUwB,QAlB/C,WACEgB,GAAQ,KAiBN,yBAGA7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqD,UAAWA,EACXyD,SAAUA,EACVrF,KAAMA,EACNnC,QAAS4C,EACThC,kBAAgB,0BAEhBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaC,GAAG,0BAAhB,kBACAP,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,kEAGAxC,EAAAC,EAAAC,cAAA,QAAMe,UAAWzB,EAAQ6G,KAAMe,YAAU,GACvCpH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAapG,UAAWzB,EAAQiH,aAC9BzG,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAYC,QAAQ,aAApB,YACAvH,EAAAC,EAAAC,cAACsH,GAAA,EAAD,CACEzH,MAAOkH,EACPQ,SA9Bd,SAA8BC,GAC5BR,EAAYQ,EAAMC,OAAO5H,QA8Bb6H,WAAY,CACVC,KAAM,YACNtH,GAAI,cAGNP,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAU/H,OAAO,GAAjB,SACAC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAU/H,MAAM,MAAhB,MACAC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAU/H,MAAM,MAAhB,MACAC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAU/H,MAAM,MAAhB,MACAC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAU/H,MAAM,MAAhB,MACAC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAU/H,MAAM,MAAhB,QAGJC,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACE9G,UAAWzB,EAAQoH,iBACnBoB,QACEhI,EAAAC,EAAAC,cAAC+H,GAAA,EAAD,CACEC,QAAS1E,EACTiE,SA7ChB,SAA+BC,GAC7BZ,EAAaY,EAAMC,OAAOO,UA6CZnI,MAAM,cAGVuD,MAAM,iBAIZtD,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QAASwB,EAAahD,MAAM,WAApC,oCC7FK,SAAS8I,KAAmB,IAAA5G,EACjBC,IAAMC,UAAS,GADEC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,GAClCK,EADkCF,EAAA,GAC5BG,EAD4BH,EAAA,GAEnCgC,EAAQ0E,eACRrC,EAAasC,aAAc3E,EAAM4E,YAAYC,KAAK,OAMxD,SAASlG,IACPR,GAAQ,GAGV,OACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQD,QAAQ,WAAW7C,MAAM,UAAUwB,QAV/C,WACEgB,GAAQ,KASN,0BAGA7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4F,WAAYA,EACZnE,KAAMA,EACNnC,QAAS4C,EACThC,kBAAgB,2BAEhBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaC,GAAG,2BACb,kCAEHP,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,uIAKFxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QAASwB,EAAahD,MAAM,WAApC,YAGAW,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QAASwB,EAAahD,MAAM,UAAUqD,WAAS,GAAvD,sCChCJ8F,GAAU,CACd,OACA,QACA,WACA,QACA,WACA,gBACA,OACA,SACA,SACA,QACA,QACA,UACA,SACA,WAGF,SAASC,GAAsBlJ,GAAO,IAC5BE,EAA8CF,EAA9CE,QAAgBiJ,EAA8BnJ,EAArCQ,MAAkB6B,EAAmBrC,EAAnBqC,KAASjC,EADRC,OAAAC,EAAA,EAAAD,CACkBL,EADlB,4BAAAgC,EAEVC,IAAMC,SAASiH,GAFLhH,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,GAE7BxB,EAF6B2B,EAAA,GAEtBiH,EAFsBjH,EAAA,GAG9BkH,EAAgBpH,IAAMqH,OAAO,MA0BnC,OAxBArH,IAAMsH,UAAU,KACTlH,GACH+G,EAASD,IAEV,CAACA,EAAW9G,IAqBb5B,EAAAC,EAAAC,cAACC,EAAA,EAADP,OAAAQ,OAAA,CACE2I,sBAAoB,EACpBC,sBAAoB,EACpB/B,SAAS,KACTgC,WAvBJ,WAC+B,MAAzBL,EAAcM,SAChBN,EAAcM,QAAQC,SAsBtB9I,kBAAgB,4BAChBuB,KAAMA,GACFjC,GAEJK,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaC,GAAG,6BAAhB,kBACAP,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAegD,UAAQ,GACrBvF,EAAAC,EAAAC,cAACkJ,GAAA,EAAD,CACEvG,IAAK+F,EACLrE,aAAW,WACXsD,KAAK,WACL9H,MAAOA,EACP0H,SArBR,SAAsBC,EAAO2B,GAC3BV,EAASU,KAsBFb,GAAQ/H,IAAI6I,GACXtJ,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACEhI,MAAOuJ,EACPxI,IAAKwI,EACLtB,QAAShI,EAAAC,EAAAC,cAACqJ,GAAA,EAAD,MACTjG,MAAOgG,OAKftJ,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QA1Cd,WACEpB,KAyCmCJ,MAAM,WAArC,UAGAW,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQtB,QAzCd,WACEpB,EAAQM,IAwCuBV,MAAM,WAAjC,QAcR,IAAML,GAAYC,YAAWyE,IAAK,CAChCC,KAAM,CACJ6C,MAAO,OACPS,SAAU,IACV9H,gBAAiBuE,EAAMQ,QAAQsF,WAAWC,OAE5CA,MAAO,CACLjD,MAAO,MACPkD,UAAW,QAIA,SAASC,KACtB,IAAMnK,EAAUR,KAD2B8C,EAEnBN,IAAMC,UAAS,GAFIM,EAAAnC,OAAA+B,EAAA,EAAA/B,CAAAkC,EAAA,GAEpCF,EAFoCG,EAAA,GAE9BF,EAF8BE,EAAA,GAAAgF,EAGjBvF,IAAMC,SAAS,SAHEuF,EAAApH,OAAA+B,EAAA,EAAA/B,CAAAmH,EAAA,GAGpChH,EAHoCiH,EAAA,GAG7B2B,EAH6B3B,EAAA,GAiB3C,OACEhH,EAAAC,EAAAC,cAAA,OAAKe,UAAWzB,EAAQmE,MACtB3D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMoJ,UAAU,MAAMC,KAAK,QACzB7J,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,QAAM,EAACkJ,SAAO,EAACC,UAAQ,EAACF,KAAK,YACrC7J,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAcC,QAAQ,mBAExBpB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,QAAM,EACNkJ,SAAO,EACPE,gBAAc,OACdC,gBAAc,gBACd1F,aAAW,iBACX1D,QAxBR,WACEgB,GAAQ,IAwBFgI,KAAK,YAEL7J,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAcC,QAAQ,iBAAiB+E,UAAWpG,KAEpDC,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,QAAM,EAACkJ,SAAO,EAACC,UAAQ,EAACF,KAAK,YACrC7J,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,QAAQ,gCACR+E,UAAU,YAGdnG,EAAAC,EAAAC,cAACuI,GAAD,CACEjJ,QAAS,CACPiK,MAAOjK,EAAQiK,OAEjBlJ,GAAG,gBACH2C,aAAW,EACXtB,KAAMA,EACNnC,QAtCR,SAAqB4J,GACnBxH,GAAQ,GAEJwH,GACFV,EAASU,IAmCLtJ,MAAOA,MC1GFmK,UAlDG,KAEdlK,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WACbjB,EAAAC,EAAAC,cAAA,OAAMe,UAAU,YACdjB,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CACEC,cAAe,CACb,CAAEvC,KAAM,WAAYwC,KAAM,aAC1B,CAAExC,KAAM,cAId7H,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAYxE,MAAM,iBAChB3F,EAAAC,EAAAC,cAACoB,EAAD,OAEFtB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,UACfjB,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAYxE,MAAM,gBAChB3F,EAAAC,EAAAC,cAACkC,EAAD,OAEFpC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,UACfjB,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAYxE,MAAM,cAChB3F,EAAAC,EAAAC,cAAC8C,EAAD,OAEFhD,EAAAC,EAAAC,cAAA,OAAKe,UAAU,UACfjB,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAYxE,MAAM,eAChB3F,EAAAC,EAAAC,cAACiD,EAAD,OAEFnD,EAAAC,EAAAC,cAAA,OAAKe,UAAU,UACfjB,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAYxE,MAAM,qBAChB3F,EAAAC,EAAAC,cAACoK,EAAD,OAEFtK,EAAAC,EAAAC,cAAA,OAAKe,UAAU,UACfjB,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAYxE,MAAM,sBAChB3F,EAAAC,EAAAC,cAAC4F,EAAD,OAEF9F,EAAAC,EAAAC,cAAA,OAAKe,UAAU,UACfjB,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAYxE,MAAM,yBAChB3F,EAAAC,EAAAC,cAAC2G,GAAD,OAEF7G,EAAAC,EAAAC,cAAA,OAAKe,UAAU,UACfjB,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAYxE,MAAM,qBAChB3F,EAAAC,EAAAC,cAACiI,GAAD,OAEFnI,EAAAC,EAAAC,cAAA,OAAKe,UAAU,UACfjB,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAYxE,MAAM,uBAChB3F,EAAAC,EAAAC,cAACyJ,GAAD","file":"static/js/37.79e936d1.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, ...other } = props;\n\n  function handleClose() {\n    onClose(selectedValue);\n  }\n\n  function handleListItemClick(value) {\n    onClose(value);\n  }\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      {...other}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map(email => (\n          <ListItem\n            button\n            onClick={() => handleListItemClick(email)}\n            key={email}\n          >\n            <ListItemAvatar>\n              <Avatar className={classes.avatar}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem button onClick={() => handleListItemClick(\"addAccount\")}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  selectedValue: PropTypes.string\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br />\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function AlertDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Slide in alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function FormDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open form dialog\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here.\n            We will send updates occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"Close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nclass CustomizedDialogs extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={this.handleClickOpen}\n        >\n          Open dialog\n        </Button>\n        <Dialog\n          onClose={this.handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={this.state.open}\n        >\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\n            Modal title\n          </DialogTitle>\n          <DialogContent dividers>\n            <Typography gutterBottom>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n              dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n              ac consectetur ac, vestibulum at eros.\n            </Typography>\n            <Typography gutterBottom>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur\n              et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n              auctor.\n            </Typography>\n            <Typography gutterBottom>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n              cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n              dui. Donec ullamcorper nulla non metus auctor fringilla.\n            </Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default CustomizedDialogs;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open full-screen dialog\n      </Button>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Sound\n            </Typography>\n            <Button color=\"inherit\" onClick={handleClose}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText\n              primary=\"Default notification ringtone\"\n              secondary=\"Tethys\"\n            />\n          </ListItem>\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"auto\",\n    width: \"fit-content\"\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nexport default function MaxWidthDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState(\"sm\");\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  }\n\n  function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  }\n\n  return (\n    <React.Fragment>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open max-width dialog\n      </Button>\n      <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You can set my maximum width and whether to adapt or not.\n          </DialogContentText>\n          <form className={classes.form} noValidate>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                inputProps={{\n                  name: \"max-width\",\n                  id: \"max-width\"\n                }}\n              >\n                <MenuItem value={false}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControlLabel\n              className={classes.formControlLabel}\n              control={\n                <Switch\n                  checked={fullWidth}\n                  onChange={handleFullWidthChange}\n                  value=\"fullWidth\"\n                />\n              }\n              label=\"Full width\"\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport default function ResponsiveDialog() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open responsive dialog\n      </Button>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst options = [\n  \"None\",\n  \"Atria\",\n  \"Callisto\",\n  \"Dione\",\n  \"Ganymede\",\n  \"Hangouts Call\",\n  \"Luna\",\n  \"Oberon\",\n  \"Phobos\",\n  \"Pyxis\",\n  \"Sedna\",\n  \"Titania\",\n  \"Triton\",\n  \"Umbriel\"\n];\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  function handleEntering() {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  function handleCancel() {\n    onClose();\n  }\n\n  function handleOk() {\n    onClose(value);\n  }\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <Dialog\n      disableBackdropClick\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      onEntering={handleEntering}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"Ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map(option => (\n            <FormControlLabel\n              value={option}\n              key={option}\n              control={<Radio />}\n              label={option}\n            />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  paper: {\n    width: \"80%\",\n    maxHeight: 435\n  }\n}));\n\nexport default function ConfirmationDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(\"Dione\");\n\n  function handleClickListItem() {\n    setOpen(true);\n  }\n\n  function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <List component=\"div\" role=\"list\">\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Interruptions\" />\n        </ListItem>\n        <ListItem\n          button\n          divider\n          aria-haspopup=\"true\"\n          aria-controls=\"ringtone-menu\"\n          aria-label=\"Phone ringtone\"\n          onClick={handleClickListItem}\n          role=\"listitem\"\n        >\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\n        </ListItem>\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText\n            primary=\"Default notification ringtone\"\n            secondary=\"Tethys\"\n          />\n        </ListItem>\n        <ConfirmationDialogRaw\n          classes={{\n            paper: classes.paper\n          }}\n          id=\"ringtone-menu\"\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          value={value}\n        />\n      </List>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\nimport SimpleDialogDemo from \"./SimpleDialog\";\nimport AlertDialog from \"./SimpleAlerts\";\nimport AlertDialogSlide from \"./DialogTransition\";\nimport FormDialog from \"./FormDialog\";\nimport CustomizedDialogs from \"./CustomizedDialog\";\nimport FullScreenDialog from \"./FullScreenDialog\";\nimport MaxWidthDialog from \"./OptimalSizeDialog\";\nimport ResponsiveDialog from \"./ResponsiveDialog\";\nimport ConfirmationDialog from \"./ConfirmationDialog\";\n\nconst AppDialog = () => {\n  return (\n    <div className=\"m-sm-30\">\n      <div  className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Material\", path: \"/material\" },\n            { name: \"Dialog\" }\n          ]}\n        />\n      </div>\n      <SimpleCard title=\"simple Dialog\">\n        <SimpleDialogDemo />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"alert dialog\">\n        <AlertDialog />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"transition\">\n        <AlertDialogSlide />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"form dialog\">\n        <FormDialog />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"customized dialog\">\n        <CustomizedDialogs />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"full-screen dialog\">\n        <FullScreenDialog />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"optimized size dialog\">\n        <MaxWidthDialog />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"responsive dialog\">\n        <ResponsiveDialog />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"confirmation dialog\">\n        <ConfirmationDialog />\n      </SimpleCard>\n    </div>\n  );\n};\n\nexport default AppDialog;\n"],"sourceRoot":""}