{"version":3,"sources":["app/views/material-kit/forms/SimpleForm.jsx","app/views/forms/BasicForm.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_material_ui_form_validator__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_9__","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_10__","_date_io_date_fns__WEBPACK_IMPORTED_MODULE_11__","SimpleForm","Component","[object Object]","args","super","this","state","username","firstName","email","date","Date","creditCard","mobile","password","confirmPassword","gender","agreement","handleSubmit","event","console","log","handleChange","persist","setState","target","name","value","handleDateChange","componentDidMount","ValidatorForm","addValidationRule","componentWillUnmount","removeValidationRule","render","_this$state","a","createElement","ref","onSubmit","onError","errors","container","spacing","item","lg","md","sm","xs","className","label","onChange","type","validators","errorMessages","utils","DateFnsUtils","margin","id","inputVariant","autoOk","KeyboardButtonProps","aria-label","row","control","color","labelPlacement","variant","r","__webpack_exports__","matx__WEBPACK_IMPORTED_MODULE_1__","_material_kit_forms_SimpleForm__WEBPACK_IMPORTED_MODULE_2__","BasicForm","routeSegments","path"],"mappings":"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","file":"static/js/26.781c4aa6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  Button,\n  Icon,\n  Grid,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nclass SimpleForm extends Component {\n  state = {\n    username: \"\",\n    firstName: \"\",\n    email: \"\",\n    date: new Date(),\n    creditCard: \"\",\n    mobile: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    gender: \"\",\n    agreement: \"\"\n  };\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", value => {\n      if (value !== this.state.password) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    // remove rule when it is not needed\n    ValidatorForm.removeValidationRule(\"isPasswordMatch\");\n  }\n\n  handleSubmit = event => {\n    console.log(\"submitted\");\n    console.log(event);\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleDateChange = date => {\n    console.log(date);\n\n    this.setState({ date });\n  };\n\n  render() {\n    let {\n      username,\n      firstName,\n      creditCard,\n      mobile,\n      password,\n      confirmPassword,\n      gender,\n      date,\n      email\n    } = this.state;\n    return (\n      <div>\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => null}\n        >\n          <Grid container spacing={6}>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Username (Min length 4, Max length 9)\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                validators={[\n                  \"required\",\n                  \"minStringLength: 4\",\n                  \"maxStringLength: 9\"\n                ]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"First Name\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"firstName\"\n                value={firstName}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Email\"\n                onChange={this.handleChange}\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                validators={[\"required\", \"isEmail\"]}\n                errorMessages={[\"this field is required\", \"email is not valid\"]}\n              />\n\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  className=\"mb-16 w-100\"\n                  margin=\"none\"\n                  id=\"mui-pickers-date\"\n                  label=\"Date picker\"\n                  inputVariant=\"standard\"\n                  type=\"text\"\n                  autoOk={true}\n                  value={date}\n                  onChange={this.handleDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\"\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n              <TextValidator\n                className=\"mb-32 w-100\"\n                label=\"Credit Card\"\n                onChange={this.handleChange}\n                type=\"number\"\n                name=\"creditCard\"\n                value={creditCard}\n                validators={[\n                  \"required\",\n                  \"minStringLength:16\",\n                  \"maxStringLength: 16\"\n                ]}\n                errorMessages={[\"this field is required\"]}\n              />\n            </Grid>\n\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Mobile Nubmer\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"mobile\"\n                value={mobile}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Password\"\n                onChange={this.handleChange}\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-16 w-100\"\n                label=\"Confirm Password\"\n                onChange={this.handleChange}\n                name=\"confirmPassword\"\n                type=\"password\"\n                value={confirmPassword}\n                validators={[\"required\", \"isPasswordMatch\"]}\n                errorMessages={[\n                  \"this field is required\",\n                  \"password didn't match\"\n                ]}\n              />\n              <RadioGroup\n                className=\"mb-16\"\n                value={gender}\n                name=\"gender\"\n                onChange={this.handleChange}\n                row\n              >\n                <FormControlLabel\n                  value=\"Male\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Male\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"Female\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Female\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"Others\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Others\"\n                  labelPlacement=\"end\"\n                />\n              </RadioGroup>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"I have read and agree to the terms of service.\"\n              />\n            </Grid>\n          </Grid>\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n            <Icon>send</Icon>\n            <span className=\"pl-8 capitalize\">Send</span>\n          </Button>\n        </ValidatorForm>\n      </div>\n    );\n  }\n}\n\nexport default SimpleForm;\n","import React, { Component } from \"react\";\nimport { Breadcrumb } from \"matx\";\nimport SimpleForm from \"../material-kit/forms/SimpleForm\";\n\nclass BasicForm extends Component {\n  render() {\n    return (\n      <div className=\"m-sm-30\">\n        <div  className=\"mb-sm-30\">\n          <Breadcrumb\n            routeSegments={[\n              { name: \"Forms\", path: \"/forms\" },\n              { name: \"Basic\" }\n            ]}\n          />\n        </div>\n        <SimpleForm />\n      </div>\n    );\n  }\n}\n\nexport default BasicForm;\n"],"sourceRoot":""}